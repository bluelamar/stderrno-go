// Copyright 2023, Standardized Errors Authors
//
// Licensed under the Apache License, Version 2.0 (the"License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an"AS IS"BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package stderrno

var (
	EPERM   = NewStdErrorNo("operation not permitted", 1)
	ENOENT  = NewStdErrorNo("no such file or directory", 2)
	ESRCH   = NewStdErrorNo("no such process", 3)
	EINTR   = NewStdErrorNo("interrupted system call", 4)
	EIO     = NewStdErrorNo("i/o error", 5)
	ENXIO   = NewStdErrorNo("no such device or address", 6)
	E2BIG   = NewStdErrorNo("arg list too long", 7)
	ENOEXEC = NewStdErrorNo("exec format error", 8)
	EBADF   = NewStdErrorNo("bad file number", 9)
	ECHILD  = NewStdErrorNo("no children", 10)
	EAGAIN  = NewStdErrorNo("no more processes", 11)
	ENOMEM  = NewStdErrorNo("not enough core", 12)
	EACCES  = NewStdErrorNo("permission denied", 13)
	EFAULT  = NewStdErrorNo("bad address", 14)
	ENOTBLK = NewStdErrorNo("block device required", 15)
	EBUSY   = NewStdErrorNo("mount device busy", 16)
	EEXIST  = NewStdErrorNo("file exists", 17)
	EXDEV   = NewStdErrorNo("cross-device link", 18)
	ENODEV  = NewStdErrorNo("no such device", 19)
	ENOTDIR = NewStdErrorNo("not a directory", 20)
	EISDIR  = NewStdErrorNo("is a directory", 21)
	EINVAL  = NewStdErrorNo("invalid argument", 22)
	ENFILE  = NewStdErrorNo("too many open files in system", 23)
	EMFILE  = NewStdErrorNo("too many open files", 24)
	ENOTTY  = NewStdErrorNo("not a typewriter", 25)
	ETXTBSY = NewStdErrorNo("text file busy", 26)
	EFBIG   = NewStdErrorNo("file too large", 27)
	ENOSPC  = NewStdErrorNo("no space left on device", 28)
	ESPIPE  = NewStdErrorNo("illegal seek", 29)
	EROFS   = NewStdErrorNo("read only file system", 30)
	EMLINK  = NewStdErrorNo("too many links", 31)
	EPIPE   = NewStdErrorNo("broken pipe", 32)
	EDOM    = NewStdErrorNo("math arg out of domain of func", 33)
	ERANGE  = NewStdErrorNo("math result not representable", 34)

	EDEADLK      = NewStdErrorNo("resource deadlock would occur", 35)
	ENAMETOOLONG = NewStdErrorNo("file name too long", 36)
	ENOLCK       = NewStdErrorNo("no record locks available", 37)

	ENOSYS = NewStdErrorNo("invalid system call number", 38)

	ENOTEMPTY = NewStdErrorNo("directory not empty", 39)
	ELOOP     = NewStdErrorNo("too many symbolic links encountered", 40)
	// EWOULDBLOCK	EAGAIN	= NewStdErrorNo("operation  would block", nnn)
	ENOMSG   = NewStdErrorNo("no message of desired type", 42)
	EIDRM    = NewStdErrorNo("identifier removed", 43)
	ECHRNG   = NewStdErrorNo("channel number out of range", 44)
	EL2NSYNC = NewStdErrorNo("level 2 not synchronized", 45)
	EL3HLT   = NewStdErrorNo("level 3 halted", 46)
	EL3RST   = NewStdErrorNo("level 3 reset", 47)
	ELNRNG   = NewStdErrorNo("link number out of range", 48)
	EUNATCH  = NewStdErrorNo("protocol driver not attached", 49)
	ENOCSI   = NewStdErrorNo("no csi structure available", 50)
	EL2HLT   = NewStdErrorNo("level 2 halted", 51)
	EBADE    = NewStdErrorNo("invalid  exchange", 52)
	EBADR    = NewStdErrorNo("invalid  request descriptor", 53)
	EXFULL   = NewStdErrorNo("exchange full", 54)
	ENOANO   = NewStdErrorNo("no anode", 55)
	EBADRQC  = NewStdErrorNo("invalid  request code", 56)
	EBADSLT  = NewStdErrorNo("invalid  slot", 57)

	// EDEADLOCK =	EDEADLK

	EBFONT          = NewStdErrorNo("bad  font file format", 59)
	ENOSTR          = NewStdErrorNo("device not a stream", 60)
	ENODATA         = NewStdErrorNo("no data available", 61)
	ETIME           = NewStdErrorNo("timer expired", 62)
	ENOSR           = NewStdErrorNo("out of streams resources", 63)
	ENONET          = NewStdErrorNo("machine is not on the network", 64)
	ENOPKG          = NewStdErrorNo("package not installed", 65)
	EREMOTE         = NewStdErrorNo("object is remote", 66)
	ENOLINK         = NewStdErrorNo("link has been severed", 67)
	EADV            = NewStdErrorNo("advertise error", 68)
	ESRMNT          = NewStdErrorNo("srmount error", 69)
	ECOMM           = NewStdErrorNo("communication error on send", 70)
	EPROTO          = NewStdErrorNo("protocol error", 71)
	EMULTIHOP       = NewStdErrorNo("multihop attempted", 72)
	EDOTDOT         = NewStdErrorNo("rfs specific error", 73)
	EBADMSG         = NewStdErrorNo("not  a data message", 74)
	EOVERFLOW       = NewStdErrorNo("value too large for defined data type", 75)
	ENOTUNIQ        = NewStdErrorNo("name not unique on network", 76)
	EBADFD          = NewStdErrorNo("file descriptor in bad state", 77)
	EREMCHG         = NewStdErrorNo("remote address changed", 78)
	ELIBACC         = NewStdErrorNo("can not access a needed shared library", 79)
	ELIBBAD         = NewStdErrorNo("accessing a corrupted shared library", 80)
	ELIBSCN         = NewStdErrorNo(".lib section in a.out corrupted", 81)
	ELIBMAX         = NewStdErrorNo("attempting to link in too many shared libraries", 82)
	ELIBEXEC        = NewStdErrorNo("cannot exec a shared library directly", 83)
	EILSEQ          = NewStdErrorNo("illegal byte sequence", 84)
	ERESTART        = NewStdErrorNo("interrupted system call should be restarted", 85)
	ESTRPIPE        = NewStdErrorNo("streams pipe error", 86)
	EUSERS          = NewStdErrorNo("too many users", 87)
	ENOTSOCK        = NewStdErrorNo("socket operation on non-socket", 88)
	EDESTADDRREQ    = NewStdErrorNo("destination address required", 89)
	EMSGSIZE        = NewStdErrorNo("message too long", 90)
	EPROTOTYPE      = NewStdErrorNo("protocol  wrong type for socket", 91)
	ENOPROTOOPT     = NewStdErrorNo("protocol  not available", 92)
	EPROTONOSUPPORT = NewStdErrorNo("protocol  not supported", 93)
	ESOCKTNOSUPPORT = NewStdErrorNo("socket type not supported", 94)
	EOPNOTSUPP      = NewStdErrorNo("operation not supported on transport endpoint", 95)
	EPFNOSUPPORT    = NewStdErrorNo("protocol  family not supported", 96)
	EAFNOSUPPORT    = NewStdErrorNo("address family not supported by protocol", 97)
	EADDRINUSE      = NewStdErrorNo("address already in use", 98)
	EADDRNOTAVAIL   = NewStdErrorNo("cannot assign requested address", 99)
	ENETDOWN        = NewStdErrorNo("network  is down", 100)
	ENETUNREACH     = NewStdErrorNo("network  is unreachable", 101)
	ENETRESET       = NewStdErrorNo("network  dropped connection because of reset", 102)
	ECONNABORTED    = NewStdErrorNo("software caused connection abort", 103)
	ECONNRESET      = NewStdErrorNo("connection reset by peer", 104)
	ENOBUFS         = NewStdErrorNo("no buffer space available", 105)
	EISCONN         = NewStdErrorNo("transport  endpoint is already connected", 106)
	ENOTCONN        = NewStdErrorNo("transport  endpoint is not connected", 107)
	ESHUTDOWN       = NewStdErrorNo("cannot send after transport endpoint shutdown", 108)
	ETOOMANYREFS    = NewStdErrorNo("too many references: cannot splice", 109)
	ETIMEDOUT       = NewStdErrorNo("connection  timed out", 110)
	ECONNREFUSED    = NewStdErrorNo("connection  refused", 111)
	EHOSTDOWN       = NewStdErrorNo("host is down", 112)
	EHOSTUNREACH    = NewStdErrorNo("no route to host", 113)
	EALREADY        = NewStdErrorNo("operation  already in progress", 114)
	EINPROGRESS     = NewStdErrorNo("operation  now in progress", 115)
	ESTALE          = NewStdErrorNo("stale file handle", 116)
	EUCLEAN         = NewStdErrorNo("structure needs cleaning", 117)
	ENOTNAM         = NewStdErrorNo("not  a XENIX named type file", 118)
	ENAVAIL         = NewStdErrorNo("no XENIX semaphores available", 119)
	EISNAM          = NewStdErrorNo("is a named type file", 120)
	EREMOTEIO       = NewStdErrorNo("remote I/O error", 121)
	EDQUOT          = NewStdErrorNo("quota exceeded", 122)

	ENOMEDIUM    = NewStdErrorNo("no medium found", 123)
	EMEDIUMTYPE  = NewStdErrorNo("wrong medium type", 124)
	ECANCELED    = NewStdErrorNo("operation  Canceled", 125)
	ENOKEY       = NewStdErrorNo("required key not available", 126)
	EKEYEXPIRED  = NewStdErrorNo("key  has expired", 127)
	EKEYREVOKED  = NewStdErrorNo("key  has been revoked", 128)
	EKEYREJECTED = NewStdErrorNo("key  was rejected by service", 129)

	// For robust mutexes.
	EOWNERDEAD      = NewStdErrorNo("owner died", 130)
	ENOTRECOVERABLE = NewStdErrorNo("state not recoverable", 131)

	ERFKILL = NewStdErrorNo("operation  not possible due to RF-kill", 132)

	EHWPOISON = NewStdErrorNo("memory page has hardware error", 133)
)
