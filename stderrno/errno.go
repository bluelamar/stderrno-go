// Copyright 2023, Standardized Errors Authors
//
// Licensed under the Apache License, Version 2.0 (the"License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an"AS IS"BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package stderrno

var (
	EPERM   = NewStdErrorNo("Operation not permitted", 1)
	ENOENT  = NewStdErrorNo("No such file or directory", 2)
	ESRCH   = NewStdErrorNo("No such process", 3)
	EINTR   = NewStdErrorNo("Interrupted system call", 4)
	EIO     = NewStdErrorNo("I/O error", 5)
	ENXIO   = NewStdErrorNo("No such device or address", 6)
	E2BIG   = NewStdErrorNo("Arg list too long", 7)
	ENOEXEC = NewStdErrorNo("Exec format error", 8)
	EBADF   = NewStdErrorNo("Bad file number", 9)
	ECHILD  = NewStdErrorNo("No children", 10)
	EAGAIN  = NewStdErrorNo("No more processes", 11)
	ENOMEM  = NewStdErrorNo("Not enough core", 12)
	EACCES  = NewStdErrorNo("Permission denied", 13)
	EFAULT  = NewStdErrorNo("Bad address", 14)
	ENOTBLK = NewStdErrorNo("Block device required", 15)
	EBUSY   = NewStdErrorNo("Mount device busy", 16)
	EEXIST  = NewStdErrorNo("File exists", 17)
	EXDEV   = NewStdErrorNo("Cross-device link", 18)
	ENODEV  = NewStdErrorNo("No such device", 19)
	ENOTDIR = NewStdErrorNo("Not a directory", 20)
	EISDIR  = NewStdErrorNo("Is a directory", 21)
	EINVAL  = NewStdErrorNo("Invalid argument", 22)
	ENFILE  = NewStdErrorNo("Too many open files in system", 23)
	EMFILE  = NewStdErrorNo("Too many open files", 24)
	ENOTTY  = NewStdErrorNo("Not a typewriter", 25)
	ETXTBSY = NewStdErrorNo("Text file busy", 26)
	EFBIG   = NewStdErrorNo("File too large", 27)
	ENOSPC  = NewStdErrorNo("No space left on device", 28)
	ESPIPE  = NewStdErrorNo("Illegal seek", 29)
	EROFS   = NewStdErrorNo("Read only file system", 30)
	EMLINK  = NewStdErrorNo("Too many links", 31)
	EPIPE   = NewStdErrorNo("Broken pipe", 32)
	EDOM    = NewStdErrorNo("Math arg out of domain of func", 33)
	ERANGE  = NewStdErrorNo("Math result not representable", 34)

	EDEADLK      = NewStdErrorNo("Resource deadlock would occur", 35)
	ENAMETOOLONG = NewStdErrorNo("File name too long", 36)
	ENOLCK       = NewStdErrorNo("No record locks available", 37)

	ENOSYS = NewStdErrorNo("Invalid system call number", 38)

	ENOTEMPTY = NewStdErrorNo("Directory not empty", 39)
	ELOOP     = NewStdErrorNo("Too many symbolic links encountered", 40)
	// EWOULDBLOCK	EAGAIN	= NewStdErrorNo("Operation would block", nnn)
	ENOMSG   = NewStdErrorNo("No message of desired type", 42)
	EIDRM    = NewStdErrorNo("Identifier removed", 43)
	ECHRNG   = NewStdErrorNo("Channel number out of range", 44)
	EL2NSYNC = NewStdErrorNo("Level 2 not synchronized", 45)
	EL3HLT   = NewStdErrorNo("Level 3 halted", 46)
	EL3RST   = NewStdErrorNo("Level 3 reset", 47)
	ELNRNG   = NewStdErrorNo("Link number out of range", 48)
	EUNATCH  = NewStdErrorNo("Protocol driver not attached", 49)
	ENOCSI   = NewStdErrorNo("No CSI structure available", 50)
	EL2HLT   = NewStdErrorNo("Level 2 halted", 51)
	EBADE    = NewStdErrorNo("Invalid exchange", 52)
	EBADR    = NewStdErrorNo("Invalid request descriptor", 53)
	EXFULL   = NewStdErrorNo("Exchange full", 54)
	ENOANO   = NewStdErrorNo("No anode", 55)
	EBADRQC  = NewStdErrorNo("Invalid request code", 56)
	EBADSLT  = NewStdErrorNo("Invalid slot", 57)

	// EDEADLOCK =	EDEADLK

	EBFONT          = NewStdErrorNo("Bad font file format", 59)
	ENOSTR          = NewStdErrorNo("Device not a stream", 60)
	ENODATA         = NewStdErrorNo("No data available", 61)
	ETIME           = NewStdErrorNo("Timer expired", 62)
	ENOSR           = NewStdErrorNo("Out of streams resources", 63)
	ENONET          = NewStdErrorNo("Machine is not on the network", 64)
	ENOPKG          = NewStdErrorNo("Package not installed", 65)
	EREMOTE         = NewStdErrorNo("Object is remote", 66)
	ENOLINK         = NewStdErrorNo("Link has been severed", 67)
	EADV            = NewStdErrorNo("Advertise error", 68)
	ESRMNT          = NewStdErrorNo("Srmount error", 69)
	ECOMM           = NewStdErrorNo("Communication error on send", 70)
	EPROTO          = NewStdErrorNo("Protocol error", 71)
	EMULTIHOP       = NewStdErrorNo("Multihop attempted", 72)
	EDOTDOT         = NewStdErrorNo("RFS specific error", 73)
	EBADMSG         = NewStdErrorNo("Not a data message", 74)
	EOVERFLOW       = NewStdErrorNo("Value too large for defined data type", 75)
	ENOTUNIQ        = NewStdErrorNo("Name not unique on network", 76)
	EBADFD          = NewStdErrorNo("File descriptor in bad state", 77)
	EREMCHG         = NewStdErrorNo("Remote address changed", 78)
	ELIBACC         = NewStdErrorNo("Can not access a needed shared library", 79)
	ELIBBAD         = NewStdErrorNo("Accessing a corrupted shared library", 80)
	ELIBSCN         = NewStdErrorNo(".lib section in a.out corrupted", 81)
	ELIBMAX         = NewStdErrorNo("Attempting to link in too many shared libraries", 82)
	ELIBEXEC        = NewStdErrorNo("Cannot exec a shared library directly", 83)
	EILSEQ          = NewStdErrorNo("Illegal byte sequence", 84)
	ERESTART        = NewStdErrorNo("Interrupted system call should be restarted", 85)
	ESTRPIPE        = NewStdErrorNo("Streams pipe error", 86)
	EUSERS          = NewStdErrorNo("Too many users", 87)
	ENOTSOCK        = NewStdErrorNo("Socket operation on non-socket", 88)
	EDESTADDRREQ    = NewStdErrorNo("Destination address required", 89)
	EMSGSIZE        = NewStdErrorNo("Message too long", 90)
	EPROTOTYPE      = NewStdErrorNo("Protocol wrong type for socket", 91)
	ENOPROTOOPT     = NewStdErrorNo("Protocol not available", 92)
	EPROTONOSUPPORT = NewStdErrorNo("Protocol not supported", 93)
	ESOCKTNOSUPPORT = NewStdErrorNo("Socket type not supported", 94)
	EOPNOTSUPP      = NewStdErrorNo("Operation not supported on transport endpoint", 95)
	EPFNOSUPPORT    = NewStdErrorNo("Protocol family not supported", 96)
	EAFNOSUPPORT    = NewStdErrorNo("Address family not supported by protocol", 97)
	EADDRINUSE      = NewStdErrorNo("Address already in use", 98)
	EADDRNOTAVAIL   = NewStdErrorNo("Cannot assign requested address", 99)
	ENETDOWN        = NewStdErrorNo("Network is down", 100)
	ENETUNREACH     = NewStdErrorNo("Network is unreachable", 101)
	ENETRESET       = NewStdErrorNo("Network dropped connection because of reset", 102)
	ECONNABORTED    = NewStdErrorNo("Software caused connection abort", 103)
	ECONNRESET      = NewStdErrorNo("Connection reset by peer", 104)
	ENOBUFS         = NewStdErrorNo("No buffer space available", 105)
	EISCONN         = NewStdErrorNo("Transport endpoint is already connected", 106)
	ENOTCONN        = NewStdErrorNo("Transport endpoint is not connected", 107)
	ESHUTDOWN       = NewStdErrorNo("Cannot send after transport endpoint shutdown", 108)
	ETOOMANYREFS    = NewStdErrorNo("Too many references: cannot splice", 109)
	ETIMEDOUT       = NewStdErrorNo("Connection timed out", 110)
	ECONNREFUSED    = NewStdErrorNo("Connection refused", 111)
	EHOSTDOWN       = NewStdErrorNo("Host is down", 112)
	EHOSTUNREACH    = NewStdErrorNo("No route to host", 113)
	EALREADY        = NewStdErrorNo("Operation already in progress", 114)
	EINPROGRESS     = NewStdErrorNo("Operation now in progress", 115)
	ESTALE          = NewStdErrorNo("Stale file handle", 116)
	EUCLEAN         = NewStdErrorNo("Structure needs cleaning", 117)
	ENOTNAM         = NewStdErrorNo("Not a XENIX named type file", 118)
	ENAVAIL         = NewStdErrorNo("No XENIX semaphores available", 119)
	EISNAM          = NewStdErrorNo("Is a named type file", 120)
	EREMOTEIO       = NewStdErrorNo("Remote I/O error", 121)
	EDQUOT          = NewStdErrorNo("Quota exceeded", 122)

	ENOMEDIUM    = NewStdErrorNo("No medium found", 123)
	EMEDIUMTYPE  = NewStdErrorNo("Wrong medium type", 124)
	ECANCELED    = NewStdErrorNo("Operation Canceled", 125)
	ENOKEY       = NewStdErrorNo("Required key not available", 126)
	EKEYEXPIRED  = NewStdErrorNo("Key has expired", 127)
	EKEYREVOKED  = NewStdErrorNo("Key has been revoked", 128)
	EKEYREJECTED = NewStdErrorNo("Key was rejected by service", 129)

	// For robust mutexes.
	EOWNERDEAD      = NewStdErrorNo("Owner died", 130)
	ENOTRECOVERABLE = NewStdErrorNo("State not recoverable", 131)

	ERFKILL = NewStdErrorNo("Operation not possible due to RF-kill", 132)

	EHWPOISON = NewStdErrorNo("Memory page has hardware error", 133)
)
